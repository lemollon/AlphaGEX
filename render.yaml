# Render Blueprint for AlphaGEX
# Deploys both Streamlit app (existing) and FastAPI backend (new)

services:
  # Existing Streamlit App (keep running)
  - type: web
    name: alphagex
    runtime: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: streamlit run gex_copilot.py --server.port=8501 --server.enableXsrfProtection=false --server.address=0.0.0.0
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0

  # NEW: FastAPI Backend API
  - type: web
    name: alphagex-api
    runtime: python
    plan: starter
    region: oregon
    branch: main  # Explicitly deploy from main branch
    autoDeploy: true  # Auto-deploy on every push to main
    buildCommand: "chmod +x verify_deployment.sh && ./verify_deployment.sh && pip install --no-cache-dir -r requirements-render.txt"
    startCommand: "./start.sh"
    healthCheckPath: /health
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: PYTHON_VERSION
        value: "3.11.0"
      - key: CLAUDE_API_KEY
        sync: false  # Set manually in Render dashboard
      - key: TRADING_VOLATILITY_API_KEY
        sync: false  # Set manually in Render dashboard
      - key: ALLOWED_ORIGINS
        value: https://alphagex.vercel.app,http://localhost:3000,http://localhost:5173
      - key: DATABASE_URL
        fromDatabase:
          name: alphagex-db
          property: connectionString

# PostgreSQL Database (shared by both services)
databases:
  - name: alphagex-db
    databaseName: alphagex
    user: alphagex
    plan: starter  # Free tier available
    region: oregon
